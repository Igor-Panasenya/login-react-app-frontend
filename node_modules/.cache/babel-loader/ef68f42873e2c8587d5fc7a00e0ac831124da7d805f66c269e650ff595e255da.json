{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect, useState } from \"react\";\naxios.defaults.baseURL = 'http://localhost:8000';\nexport default function useFetch(query) {\n  _s();\n  const [getData, setGetData] = useState({\n    isLoading: false,\n    apiData: undefined,\n    status: null,\n    serverError: null\n  });\n  useEffect(() => {\n    if (!query) return;\n    const fetchData = async () => {\n      try {\n        setGetData(prev => ({\n          ...prev,\n          isLoadnig: true\n        }));\n        const {\n          data,\n          status\n        } = await axios.get(`/api/${query}`);\n        if (status === 201) {\n          setGetData(prev => ({\n            ...prev,\n            isLoadnig: false\n          }));\n          setGetData(prev => ({\n            ...prev,\n            apiData: data,\n            status: status\n          }));\n        }\n        setGetData(prev => ({\n          ...prev,\n          isLoadnig: false\n        }));\n      } catch (error) {\n        setGetData(prev => ({\n          ...prev,\n          isLoadnig: false,\n          serverError: error\n        }));\n      }\n    };\n    fetchData();\n  }, [query]);\n  return [getData, setGetData];\n}\n_s(useFetch, \"MIgYzVbAwC8OSQ9B+d1h7cLwFME=\");","map":{"version":3,"names":["axios","useEffect","useState","defaults","baseURL","useFetch","query","getData","setGetData","isLoading","apiData","undefined","status","serverError","fetchData","prev","isLoadnig","data","get","error"],"sources":["D:/09 Programming/02 Trayning/08 Backend/login_react_app/client/src/hooks/fetch.hook.js"],"sourcesContent":["import axios from 'axios';\r\nimport {useEffect, useState} from \"react\";\r\n\r\naxios.defaults.baseURL = 'http://localhost:8000';\r\n\r\nexport default function useFetch(query) {\r\n    const [getData, setGetData] = useState({ isLoading: false, apiData: undefined, status: null, serverError: null });\r\n\r\n    useEffect(() => {\r\n\r\n        if (!query) return;\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n\r\n                setGetData(prev => ({ ...prev, isLoadnig: true}));\r\n\r\n                const {data, status } = await axios.get(`/api/${query}`);\r\n\r\n                if (status === 201) {\r\n                    setGetData(prev => ({ ...prev, isLoadnig: false}));\r\n                    setGetData(prev => ({ ...prev, apiData: data, status: status}));\r\n                }\r\n\r\n                setGetData(prev => ({ ...prev, isLoadnig: false}));\r\n\r\n            } catch (error) {\r\n                setGetData(prev => ({ ...prev, isLoadnig: false, serverError: error}))\r\n            }\r\n        };\r\n        fetchData();\r\n\r\n    }, [query]);\r\n\r\n    return [getData, setGetData];\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEzCF,KAAK,CAACG,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAEhD,eAAe,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC;IAAEO,SAAS,EAAE,KAAK;IAAEC,OAAO,EAAEC,SAAS;IAAEC,MAAM,EAAE,IAAI;IAAEC,WAAW,EAAE;EAAK,CAAC,CAAC;EAEjHZ,SAAS,CAAC,MAAM;IAEZ,IAAI,CAACK,KAAK,EAAE;IAEZ,MAAMQ,SAAS,GAAG,YAAY;MAC1B,IAAI;QAEAN,UAAU,CAACO,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAEC,SAAS,EAAE;QAAI,CAAC,CAAC,CAAC;QAEjD,MAAM;UAACC,IAAI;UAAEL;QAAO,CAAC,GAAG,MAAMZ,KAAK,CAACkB,GAAG,CAAE,QAAOZ,KAAM,EAAC,CAAC;QAExD,IAAIM,MAAM,KAAK,GAAG,EAAE;UAChBJ,UAAU,CAACO,IAAI,KAAK;YAAE,GAAGA,IAAI;YAAEC,SAAS,EAAE;UAAK,CAAC,CAAC,CAAC;UAClDR,UAAU,CAACO,IAAI,KAAK;YAAE,GAAGA,IAAI;YAAEL,OAAO,EAAEO,IAAI;YAAEL,MAAM,EAAEA;UAAM,CAAC,CAAC,CAAC;QACnE;QAEAJ,UAAU,CAACO,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAEC,SAAS,EAAE;QAAK,CAAC,CAAC,CAAC;MAEtD,CAAC,CAAC,OAAOG,KAAK,EAAE;QACZX,UAAU,CAACO,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAEC,SAAS,EAAE,KAAK;UAAEH,WAAW,EAAEM;QAAK,CAAC,CAAC,CAAC;MAC1E;IACJ,CAAC;IACDL,SAAS,EAAE;EAEf,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEX,OAAO,CAACC,OAAO,EAAEC,UAAU,CAAC;AAChC;AAAC,GA9BuBH,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}