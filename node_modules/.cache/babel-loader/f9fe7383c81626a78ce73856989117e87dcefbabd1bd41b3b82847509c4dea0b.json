{"ast":null,"code":"var _jsxFileName = \"D:\\\\09 Programming\\\\02 Trayning\\\\08 Backend\\\\login_react_app\\\\client\\\\src\\\\components\\\\Reset.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styles from '../styles/Username.module.css';\nimport { useFormik } from \"formik\";\nimport { resetPasswordValidation } from \"../helper/validate\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { resetPassword } from \"../helper/helper\";\nimport { useAuthStore } from \"../store/store\";\nimport { useNavigate } from \"react-router-dom\";\nimport useFetch from \"../hooks/fetch.hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reset = () => {\n  _s();\n  const navigate = useNavigate();\n  const [{\n    isLoading,\n    apiData,\n    serverError\n  }] = useFetch('createResetSession');\n  const {\n    username\n  } = useAuthStore(state => state.auth);\n  useEffect(() => {}, []);\n  const formik = useFormik({\n    initialValues: {\n      password: 'admin@123!',\n      confirm_pwd: 'admin@123!'\n    },\n    validate: resetPasswordValidation,\n    validateOnBlur: false,\n    validateOnChange: false,\n    onSubmit: async values => {\n      let resetPromise = resetPassword({\n        username,\n        password: values.password\n      });\n      toast.promise(resetPromise, {\n        loading: 'Updating...',\n        success: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \" Reset Successfully...! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 26\n        }, this),\n        error: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \" Could not Reset! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 24\n        }, this)\n      });\n      resetPromise.then(function () {\n        navigate('/password');\n      });\n    }\n  });\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"text-2xl font-bold\",\n    children: \"isLoading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 27\n  }, this);\n  if (serverError) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"text-xl text-red-500\",\n    children: serverError.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-center\",\n      reverseOrder: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.glass,\n        style: {\n          width: '50%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-5xl font-bold\",\n            children: \" Reset \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"py-4 text-xl w-2/3 text-center text-gray-500\",\n            children: \"Enter new password.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"py-20\",\n          onSubmit: formik.handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textbox flex flex-col items-center gap-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...formik.getFieldProps('password'),\n              type: \"password\",\n              className: styles.textbox,\n              placeholder: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...formik.getFieldProps('confirm_pwd'),\n              type: \"password\",\n              className: styles.textbox,\n              placeholder: \"Repeat Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.btn,\n              type: \"submit\",\n              children: \" Sign In \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Reset, \"YnP51sVPVkJniw2HcXNANcoYMYY=\", false, function () {\n  return [useNavigate, useFetch, useAuthStore, useFormik];\n});\n_c = Reset;\nexport default Reset;\nvar _c;\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"names":["React","useEffect","styles","useFormik","resetPasswordValidation","toast","Toaster","resetPassword","useAuthStore","useNavigate","useFetch","Reset","navigate","isLoading","apiData","serverError","username","state","auth","formik","initialValues","password","confirm_pwd","validate","validateOnBlur","validateOnChange","onSubmit","values","resetPromise","promise","loading","success","error","then","message","glass","width","handleSubmit","getFieldProps","textbox","btn"],"sources":["D:/09 Programming/02 Trayning/08 Backend/login_react_app/client/src/components/Reset.js"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport styles from '../styles/Username.module.css';\r\nimport { useFormik } from \"formik\";\r\nimport {resetPasswordValidation} from \"../helper/validate\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport {resetPassword} from \"../helper/helper\";\r\nimport { useAuthStore } from \"../store/store\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useFetch from \"../hooks/fetch.hook\";\r\n\r\nconst Reset = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const [{ isLoading, apiData, serverError }] = useFetch('createResetSession')\r\n    const { username } = useAuthStore(state => state.auth);\r\n\r\n    useEffect(() => {\r\n\r\n        \r\n\r\n        }, [])\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: 'admin@123!',\r\n            confirm_pwd: 'admin@123!'\r\n        },\r\n        validate: resetPasswordValidation,\r\n        validateOnBlur: false,\r\n        validateOnChange: false,\r\n        onSubmit: async values => {\r\n            let resetPromise = resetPassword({ username, password: values.password});\r\n\r\n            toast.promise(resetPromise, {\r\n                loading: 'Updating...',\r\n                success: <b> Reset Successfully...! </b>,\r\n                error: <b> Could not Reset! </b>\r\n            });\r\n\r\n            resetPromise.then(function() {\r\n                navigate('/password');\r\n            })\r\n        }\r\n    });\r\n\r\n    if (isLoading) return <h1 className=\"text-2xl font-bold\">isLoading...</h1>;\r\n    if(serverError) return <h1 className=\"text-xl text-red-500\">{serverError.message}</h1>\r\n\r\n    return (\r\n        <div className=\"container mx-auto\">\r\n\r\n            <Toaster position='top-center' reverseOrder={false}></Toaster>\r\n\r\n            <div className=\"flex justify-center items-center h-screen\">\r\n                <div className={styles.glass} style={{width: '50%'}}>\r\n\r\n                    <div className=\"title flex flex-col items-center\">\r\n                        <h4 className=\"text-5xl font-bold\"> Reset </h4>\r\n                        <span className=\"py-4 text-xl w-2/3 text-center text-gray-500\">\r\n                            Enter new password.\r\n                        </span>\r\n                    </div>\r\n\r\n                    <form className=\"py-20\" onSubmit={formik.handleSubmit}>\r\n                        <div className=\"textbox flex flex-col items-center gap-6\">\r\n                            <input {...formik.getFieldProps('password')} type=\"password\" className={styles.textbox} placeholder=\"New Password\"/>\r\n                            <input {...formik.getFieldProps('confirm_pwd')} type=\"password\" className={styles.textbox} placeholder=\"Repeat Password\"/>\r\n                            <button className={styles.btn} type=\"submit\"> Sign In </button>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Reset;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}