{"ast":null,"code":"import toast from 'react-hot-toast';\n\n// validate login page username\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\n\n// validate password\nfunction passwordVerify() {\n  let errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  const specialChars = /['!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    errors.password = toast.error('Password Required...!');\n  } else if (values.password.includes(' ')) {\n    errors.password = toast.error('Wrong Password...!');\n  } else if (values.password.length < 4) {\n    errors.password = toast.error('Password must be more than 4 characters long!');\n  } else if (!specialChars.test(values.password)) {\n    errors.password = toast.error('Password must have specials!');\n  }\n}\n\n// validate username\nfunction usernameVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.username) {\n    error.username = toast.error(\"Username Required...!\");\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error(\"Invalid Username...!\");\n  }\n  return error;\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","passwordVerify","specialChars","password","error","includes","length","test","username"],"sources":["D:/09 Programming/02 Trayning/08 Backend/login_react_app/client/src/helper/validate.js"],"sourcesContent":["import toast from 'react-hot-toast';\r\n\r\n// validate login page username\r\nexport async function usernameValidate(values) {\r\n    const errors = usernameVerify({}, values);\r\n\r\n    return errors;\r\n}\r\n\r\n// validate password\r\nfunction passwordVerify(errors = {}, values) {\r\n\r\n    const specialChars = /['!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n    if (!values.password) {\r\n        errors.password = toast.error('Password Required...!')\r\n    } else if (values.password.includes(' ')) {\r\n        errors.password = toast.error('Wrong Password...!')\r\n    } else if (values.password.length < 4) {\r\n        errors.password = toast.error('Password must be more than 4 characters long!')\r\n    } else if (!specialChars.test(values.password)) {\r\n        errors.password = toast.error('Password must have specials!')\r\n    }\r\n}\r\n\r\n\r\n// validate username\r\nfunction usernameVerify(error = {}, values){\r\n    if (!values.username) {\r\n        error.username = toast.error(\"Username Required...!\");\r\n    } else if (values.username.includes(\" \")) {\r\n        error.username = toast.error(\"Invalid Username...!\");\r\n    }\r\n\r\n    return error\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;;AAEnC;AACA,OAAO,eAAeC,gBAAgB,CAACC,MAAM,EAAE;EAC3C,MAAMC,MAAM,GAAGC,cAAc,CAAC,CAAC,CAAC,EAAEF,MAAM,CAAC;EAEzC,OAAOC,MAAM;AACjB;;AAEA;AACA,SAASE,cAAc,GAAsB;EAAA,IAArBF,MAAM,uEAAG,CAAC,CAAC;EAAA,IAAED,MAAM;EAEvC,MAAMI,YAAY,GAAG,yCAAyC;EAC9D,IAAI,CAACJ,MAAM,CAACK,QAAQ,EAAE;IAClBJ,MAAM,CAACI,QAAQ,GAAGP,KAAK,CAACQ,KAAK,CAAC,uBAAuB,CAAC;EAC1D,CAAC,MAAM,IAAIN,MAAM,CAACK,QAAQ,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAE;IACtCN,MAAM,CAACI,QAAQ,GAAGP,KAAK,CAACQ,KAAK,CAAC,oBAAoB,CAAC;EACvD,CAAC,MAAM,IAAIN,MAAM,CAACK,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;IACnCP,MAAM,CAACI,QAAQ,GAAGP,KAAK,CAACQ,KAAK,CAAC,+CAA+C,CAAC;EAClF,CAAC,MAAM,IAAI,CAACF,YAAY,CAACK,IAAI,CAACT,MAAM,CAACK,QAAQ,CAAC,EAAE;IAC5CJ,MAAM,CAACI,QAAQ,GAAGP,KAAK,CAACQ,KAAK,CAAC,8BAA8B,CAAC;EACjE;AACJ;;AAGA;AACA,SAASJ,cAAc,GAAoB;EAAA,IAAnBI,KAAK,uEAAG,CAAC,CAAC;EAAA,IAAEN,MAAM;EACtC,IAAI,CAACA,MAAM,CAACU,QAAQ,EAAE;IAClBJ,KAAK,CAACI,QAAQ,GAAGZ,KAAK,CAACQ,KAAK,CAAC,uBAAuB,CAAC;EACzD,CAAC,MAAM,IAAIN,MAAM,CAACU,QAAQ,CAACH,QAAQ,CAAC,GAAG,CAAC,EAAE;IACtCD,KAAK,CAACI,QAAQ,GAAGZ,KAAK,CAACQ,KAAK,CAAC,sBAAsB,CAAC;EACxD;EAEA,OAAOA,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}